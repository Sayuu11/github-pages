if game.PlaceId == 18668065416 then
	local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

	local Window = Rayfield:CreateWindow({
   Name = "Sayuu HUBüêá",
   Icon = 0, 
   LoadingTitle = "Welcome to Sayuu HUBü•∂",
   LoadingSubtitle = "by Sayuu",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = "Sayuu", -- Create a custom folder for your hub/game
      FileName = "Sayuu Hub"
   },

   Discord = {
      Enabled = true, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "https://discord.gg/ySq94JsXn3", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Sayuu Hub | Key",
      Subtitle = "Link in Discord Server",
      Note = "Join Discord Server from Misc Tab.", -- Use this to tell the user how to get a key
      FileName = "SayuuHubKey", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"https://pastebin.com/raw/rQ8u2ywr"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local MainTab = Window:CreateTab("üè†Home", nil)
local MainSection = MainTab:CreateSection("Main")

Rayfield:Notify({
   Title = "You executed Sayuu Hub!",
   Content = "Nice broüß†",
   Duration = 6.5,
   Image = nil,
})

local Button = MainTab:CreateButton({
   Name = "Infinite Jump", 
   Callback = function()

_G.infinjump = not _G.infinjump

   if _G.infinJumpStarted == nil then
	   _G.infinJumpStarted = true

   ---notifi
   game.StarterGui:SetCore("SendNotification", {Title="Sayuu Hub"; Text="Infinite Jump Activated!"; Duration=5;})

   --code
   local plr = game:GetService("Players").LocalPlayer
   local m = plr:GetMouse()
   m.KeyDown:Connect(function(k)
       if _G.infinjump then
		  if k:byte() == 32 then
			  humanoid = game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
			  humanoid:ChangeState("Jumping")
			  wait()
			  humanoid:ChangeState("Seated")
		  end 
	   end
   end)
end  
   end,
})

local Slider = MainTab:CreateSlider({
   Name = "Walkspeed Slider",
   Range = {0, 300},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})

end
